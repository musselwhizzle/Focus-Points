#------------------------------------------------------------------------------
# File:         bibble.config
#
# Description:  This config file defines Bibble XMP tags for writing.
#
# Usage:        exiftool -config bibble.config -BIBBLETAG=VALUE FILE ...
#
# Requires:     ExifTool version 10.28 or later
#
# Revisions:    2016/09/25 - P. Harvey Created
#------------------------------------------------------------------------------

%Image::ExifTool::UserDefined = (
  'Image::ExifTool::XMP::Main' => {
    dmf => {
      SubDirectory => { TagTable => 'Image::ExifTool::UserDefined::dmf' },
    },
  },
);

%Image::ExifTool::UserDefined::dmf = (
  GROUPS        => { 0 => 'XMP', 1 => 'XMP-dmf', 2 => 'Image' },
  NAMESPACE     => { 'dmf' => 'http://www.bibblelabs.com/DigitalMasterFile/1.0/' },
  WRITABLE      => 'string',
  versionCount => {
    Name => 'DMFCount',
    Writable => 'integer',
  },
  versions => {
    Name => 'DMF',
    List => 'Seq',
    Struct => {
      NAMESPACE => { 'dmfversion' => 'http://www.bibblelabs.com/DigitalMasterFileVersion/1.0/' },
      software => { },
      softwareVersion => { },
      versionName => { },
      settings => {
        Struct => {
          NAMESPACE => { 'bset' => 'http://www.bibblelabs.com/BibbleSettings/5.0/' },
          settingsVersion => { },
          respectsTransform => { },
          curLayer => { },
          layers => {
            List => 'Seq',
            Struct => {
              NAMESPACE => { 'blay' => 'http://www.bibblelabs.com/BibbleLayers/5.0/' },
              layerId => { },
              layerPos => { },
              name => { },
              enabled => { },
              options => {
                Struct => {
                  NAMESPACE => { 'bopt' => 'http://www.bibblelabs.com/BibbleOpt/5.0/' },
                  'optionchanged' => { },
                  'hasSettings' => { },
                  'metaDirty' => { },
                  'version' => { },
                  'colormode' => { },
                  'colormode' => { },
                  'workingspace' => { },
                  'whiteauto' => { },
                  'whitetype' => { },
                  'lwhitetype' => { },
                  'lmr' => { },
                  'lmb' => { },
                  'whitered' => { },
                  'whitegreen' => { },
                  'whiteblue' => { },
                  'whiteowbr' => { },
                  'whiteowbb' => { },
                  'autolevel' => { },
                  'shadowval' => { },
                  'highlightval' => { },
                  'exposureval' => { },
                  'highlightrecval' => { },
                  'highlightrange' => { },
                  'blackPoint' => { },
                  'fillamount' => { },
                  'fillrange' => { },
                  'autorotate' => { },
                  'rotateangle' => { },
                  'sharpensense' => { },
                  'newsharpen' => { },
                  'sharpenon' => { },
                  'pcenabled' => { },
                  'pctintmeta' => { },
                  'PCNOn' => { },
                  'PCNPreset' => { },
                  'PCNStrength' => { },
                  'PCNDetail' => { },
                  'red' => { },
                  'green' => { },
                  'blue' => { },
                  'sat' => { },
                  'cont' => { },
                  'hue' => { },
                  'vibe' => { },
                  'useHSL' => { },
                  'useHSV' => { },
                  'invertRegions' => { },
                  'layerOpacity' => { },
                  'selective_color' => { },
                  'curveson' => { },
                  'curves_m_cn' => { },
                  'curves_m_cy' => { },
                  'curves_m_cx' => { },
                  'curves_m_imid' => { },
                  'curves_m_olo' => { },
                  'curves_m_ilo' => { },
                  'curves_m_ihi' => { },
                  'curves_m_ohi' => { },
                  'kelvin' => { },
                  'tint' => { },
                  'okelvin' => { },
                  'otint' => { },
                  'lkelvin' => { },
                  'ltint' => { },
                  'ckelvin' => { },
                  'ctint' => { },
                  'cropon' => { },
                  'croplocked' => { },
                  'cropstyle' => { },
                  'cropleft' => { },
                  'croptop' => { },
                  'cropheight' => { },
                  'cropwidth' => { },
                  'cropdpi' => { },
                  'cropstickydpi' => { },
                  'cropstickyx' => { },
                  'cropstickyy' => { },
                  'cropmenuitem' => { },
                  'croppercent' => { },
                  'Date' => { },
                  'DigitizedDateTime' => { },
                  'title' => { },
                  'Priority' => { },
                  'Category' => { },
                  'SupplementalCategory' => { },
                  'creator' => { },
                  'AuthorsPosition' => { },
                  'rights' => { },
                  'Credit' => { },
                  'description' => { },
                  'CaptionWriter' => { },
                  'City' => { },
                  'State' => { },
                  'Country' => { },
                  'CountryCode' => { },
                  'Headline' => { },
                  'Instructions' => { },
                  'TransmissionReference' => { },
                  'Source' => { },
                  'subject' => { },
                  'IntellectualGenre' => { },
                  'CiAdrCity' => { },
                  'CiAdrCtry' => { },
                  'CiAdrExtadr' => { },
                  'CiAdrPcode' => { },
                  'CiAdrRegion' => { },
                  'CiEmailWork' => { },
                  'CiTelWork' => { },
                  'CiUrlWork' => { },
                  'UsageTerms' => { },
                  'Location' => { },
                  'SubjectCode' => { },
                  'Scene' => { },
                  'tag' => { },
                  'keywordlist' => { },
                  'rating' => { },
                  'label' => { },
                  'warpon' => { },
                  'warpa' => { },
                  'warpb' => { },
                  'warpc' => { },
                  'warpresize' => { },
                  'warpfocal' => { },
                  'warpcaon' => { },
                  'warpcarc' => { },
                  'warpcaby' => { },
                  'vignetteon' => { },
                  'vignetterad' => { },
                  'vignetteamt' => { },
                  'profilemake' => { },
                  'profilemodel' => { },
                  'profilelens' => { },
                  'lens' => { },
                  'GPSVersionID' => { },
                  'GPSLatitude' => { },
                  'GPSLongitude' => { },
                  'GPSAltitudeRef' => { },
                  'GPSAltitude' => { },
                  'GPSTimeStamp' => { },
                  'GPSSatellites' => { },
                  'GPSStatus' => { },
                  'GPSMeasureMode' => { },
                  'GPSDateStamp' => { },
                  'GPSMapDatum' => { },
                  'GPSAreaInformation' => { },
                  'GPSProcessingMethod' => { },
                  'bMirrorOn' => { },
                  'bInvertOn' => { },
                  'rn_enabled' => { },
                  'rn_smooth_enabled' => { },
                  'rn_threshold' => { },
                  'rn_limit' => { },
                  'lc_enabled' => { },
                  'lc_radius' => { },
                  'lc_strength' => { },
                  'lc_debug' => { },
                  'enableInputProfile' => { },
                  'inputProfile' => { },
                  'redeyeSize' => { },
                  'redeyeTrack' => { },
                  'redeyeTrackStra' => { },
                  'redeyeTrackCrop' => { },
                  'redeyeEnable' => { },
                  'watermark_mode' => { },
                  'watermark_imageFilename' => { },
                  'watermark_text' => { },
                  'watermark_fontName' => { },
                  'watermark_fontColor' => { },
                  'watermark_fontItalic' => { },
                  'watermark_fontUnderline' => { },
                  'watermark_fontBold' => { },
                  'watermark_fontStrikeout' => { },
                  'watermark_alignment' => { },
                  'watermark_basesize' => { },
                  'watermark_rotation' => { },
                  'watermark_size' => { },
                  'watermark_hpos' => { },
                  'watermark_vpos' => { },
                  'watermark_opacity' => { },
                  'watermark_hskew' => { },
                  'watermark_vskew' => { },
                  'watermark_hproject' => { },
                  'watermark_vproject' => { },
                  'watermark_hstretch' => { },
                  'watermark_vstretch' => { },
                  'watermark_enabled' => { },
                  'ferd.bez_enabled' => { },
                  'ferd.bez_Early' => { },
                  'ferd.bez_HCL' => { },
                  'ferd.bez_opacity' => { },
                  'ferd.bez_saturation' => { },
                  'ferd.bez_lighten' => { },
                  'ferd.bez_lightengamma' => { },
                  'ferd.bez_midi' => { },
                  'ferd.bez_sigcontrast' => { },
                  'ferd.bez_sigmiddle' => { },
                  'ferd.bez_shadows' => { },
                  'ferd.bez_lowmids' => { },
                  'ferd.bez_greys' => { },
                  'ferd.bez_highmids' => { },
                  'ferd.bez_highlights' => { },
                  'ferd.bez_shadows4' => { },
                  'ferd.bez_lowmids4' => { },
                  'ferd.bez_highmids4' => { },
                  'ferd.bez_highlights4' => { },
                  'ferd.ferd_bez_enabled' => { },
                  'ferd.ferd_bez_RGB' => { },
                  'ferd.ferd_bez_BW' => { },
                  'ferd.ferd_bez_lighten' => { },
                  'ferd.ferd_bez_lightengamma' => { },
                  'ferd.ferd_bez_midi' => { },
                  'ferd.ferd_bez_blak' => { },
                  'ferd.ferd_bez_sigcontrast' => { },
                  'ferd.ferd_bez_sigmiddle' => { },
                  'ferd.ferd_bez_contrast' => { },
                  'ferd.ferd_bez_centre' => { },
                  'ferd.ferd_bez_shadows' => { },
                  'ferd.ferd_bez_lowmids' => { },
                  'ferd.ferd_bez_greys' => { },
                  'ferd.ferd_bez_highmids' => { },
                  'ferd.ferd_bez_highlights' => { },
                  'ferd.ferd_bez_shadows4' => { },
                  'ferd.ferd_bez_lowmids4' => { },
                  'ferd.ferd_bez_highmids4' => { },
                  'ferd.ferd_bez_highlights4' => { },
                  'Grid_kb.thirds' => { },
                  'Grid_kb.goldenrat' => { },
                  'Grid_kb.goldenspir' => { },
                  'Grid_kb.squaregrid' => { },
                  'Grid_kb.spiralcenter' => { },
                  'Grid_kb.gridsize' => { },
                  'Grid_kb.gridxcenter' => { },
                  'Grid_kb.gridycenter' => { },
                  'Mix3.mix3_enabled' => { },
                  'Mix3.mix3_early' => { },
                  'Mix3.mix3_exposure' => { },
                  'Mix3.mix3_red' => { },
                  'Mix3.mix3_green' => { },
                  'Mix3.mix3_blue' => { },
                  'SiliconBonk.SiliconBonkOn' => { },
                  'SiliconBonk.SiliconBonkHighlights' => { },
                  'SiliconBonk.SiliconBonkH' => { },
                  'SiliconBonk.SiliconBonkL' => { },
                  'SiliconBonk.SiliconBonkContrast' => { },
                  'SiliconBonk.SiliconBonkMid' => { },
                  'SiliconBonk.SiliconBonkSat' => { },
                  'SiliconBonk.SiliconBonkC0L' => { },
                  'SiliconBonk.SiliconBonkC1L' => { },
                  'SiliconBonk.SiliconBonkC2L' => { },
                  'SiliconBonk.SiliconBonkC3L' => { },
                  'SiliconBonk.SiliconBonkC4L' => { },
                  'SiliconBonk.SiliconBonkC5L' => { },
                  'Vigne_kb.kbv_enabled' => { },
                  'Vigne_kb.kbv_size' => { },
                  'Vigne_kb.kbv_strength' => { },
                  'Vigne_kb.kbv_ccol' => { },
                  'Vigne_kb.kbv_falloff' => { },
                  'Vigne_kb.kbv_shape' => { },
                  'Vigne_kb.kbv_horzcenter' => { },
                  'Vigne_kb.kbv_vertcenter' => { },
                  'Vigne_kb.kbv_factor' => { },
                  'Vigne_kb.kbv_trans' => { },
                  'Vigne_kb.kbv_adjustcrop' => { },
                  'Vigne_kb.kbv_colenabled' => { },
                  'Vigne_kb.kbv_col' => { },
                  'Vigne_kb.kbv_preview' => { },
                  'Vigne_kb.kbv_desat' => { },
                  'Vigne_kb.kbv_desaturate' => { },
                  'WaveletDenoise2.bSphWaveletDenoiseon' => { },
                  'WaveletDenoise2.bSphWaveletDenoiseThresL' => { },
                  'WaveletDenoise2.bSphWaveletDenoiseLowL' => { },
                  'WaveletDenoise2.bSphWaveletDenoiseThresC' => { },
                  'WaveletDenoise2.bSphWaveletDenoiseLowC' => { },
                  'WaveletDenoise2.bSphWaveletDenoiseDePepper' => { },
                  'WaveletDenoise2.bSphWaveletDenoiseShowEdge' => { },
                  'WaveletSharpen2.bSphWaveletUsmon' => { },
                  'WaveletSharpen2.bSphWaveletUsmRadius' => { },
                  'WaveletSharpen2.bSphWaveletUsmAmount' => { },
                  'WaveletSharpen2.bSphWaveletUsmThreshold' => { },
                  'WaveletSharpen2.bSphWaveletUsmClarity' => { },
                  'WaveletSharpen2.bSphWaveletLLenable' => { },
                  'WaveletSharpen2.bSphWaveletLLStrength' => { },
                  'WaveletSharpen2.bSphWaveletLLiter' => { },
                  'WaveletSharpen2.bSphWaveletMCStrength' => { },
                  'WaveletSharpen2.bSphWaveleton' => { },
                  'WaveletSharpen2.bSphWaveletAmount' => { },
                  'WaveletSharpen2.bSphWaveletRadius' => { },
                  'WaveletSharpen2.bSphWaveletSharpenDePepper' => { },
                  'WaveletSharpen2.bSphWaveletEdge' => { },
                  'WaveletSharpen2.bSphWaveletSharpenClarity' => { },
                  'WaveletSharpen2.bSphWaveleton2' => { },
                  'WaveletSharpen2.bSphWaveletAmount2' => { },
                  'WaveletSharpen2.bSphWaveletRadius2' => { },
                  'WaveletSharpen2.bSphWaveletSharpenDePepper2' => { },
                  'WaveletSharpen2.bSphWaveletEdge2' => { },
                  'WaveletSharpen2.bSphWaveletSharpenClarity2' => { },
                  'zChannelMixerGroup.zcmEnable' => { },
                  'zChannelMixerGroup.zcmbw' => { },
                  'zChannelMixerGroup.zcmbwa' => { },
                  'zChannelMixerGroup.zcmlockbw' => { },
                  'zChannelMixerGroup.zcmlockcolor' => { },
                  'zChannelMixerGroup.zcmrr' => { },
                  'zChannelMixerGroup.zcmrg' => { },
                  'zChannelMixerGroup.zcmrb' => { },
                  'zChannelMixerGroup.zcmgr' => { },
                  'zChannelMixerGroup.zcmgg' => { },
                  'zChannelMixerGroup.zcmgb' => { },
                  'zChannelMixerGroup.zcmbr' => { },
                  'zChannelMixerGroup.zcmbg' => { },
                  'zChannelMixerGroup.zcmbb' => { },
                  'zFramePlug.zframeSize1' => { },
                  'zFramePlug.zframeColor1' => { },
                  'zFramePlug.zframeSize2' => { },
                  'zFramePlug.zframeColor2' => { },
                  'zFramePlug.zframeSize3' => { },
                  'zFramePlug.zframeColor3' => { },
                  'zFramePlug.zframeSize4' => { },
                  'zFramePlug.zframeColor4' => { },
                  'zFramePlug.zframeSize5' => { },
                  'zFramePlug.zframeColor5' => { },
                  'zFramePlug.zframeDummy' => { },
                  'zFramePlug.zframeEnable' => { },
                  'zFramePlug.zframeEnable1' => { },
                  'zFramePlug.zframeEnable2' => { },
                  'zFramePlug.zframeEnable3' => { },
                  'zFramePlug.zframeEnable4' => { },
                  'zFramePlug.zframeEnable5' => { },
                  'zFramePlug.zframeCalibration' => { },
                  'zFramePlug.zframeRatio1' => { },
                  'zFramePlug.zframeRatio2' => { },
                  'zFramePlug.zframeRatio3' => { },
                  'zFramePlug.zframeRatio4' => { },
                  'zFramePlug.zframeRatio5' => { },
                  'zFramePlug.xPos1' => { },
                  'zFramePlug.yPos1' => { },
                  'zFramePlug.xPos2' => { },
                  'zFramePlug.yPos2' => { },
                  'zFramePlug.xPos3' => { },
                  'zFramePlug.yPos3' => { },
                  'zFramePlug.xPos4' => { },
                  'zFramePlug.yPos4' => { },
                  'zFramePlug.xPos5' => { },
                  'zFramePlug.yPos5' => { },
                  'zFramePlug.relativeTo' => { },
                  'zFramePlug.place' => { },
                  'Zone_kb.kbz_enabled' => { },
                  'Zone_kb.kbz_highlight' => { },
                  'zPerspectorPlug.zpersEnable' => { },
                  'zPerspectorPlug.zpersRotate' => { },
                  'zPerspectorPlug.zpersGridEnable' => { },
                  'zPerspectorPlug.zpersGrid' => { },
                  'zPerspectorPlug.zpersTopLeft' => { },
                  'zPerspectorPlug.zpersTopRight' => { },
                  'zPerspectorPlug.zpersLeftTop' => { },
                  'zPerspectorPlug.zpersRightTop' => { },
                  'zPerspectorPlug.zpersBottomLeft' => { },
                  'zPerspectorPlug.zpersBottomRight' => { },
                  'zPerspectorPlug.zpersLeftBottom' => { },
                  'zPerspectorPlug.zpersRightBottom' => { },
                  'zPerspectorPlug.zpersmirror' => { },
                  'zPerspectorPlug.zpersMirrorOffset' => { },
                  'zPerspectorPlug.zpersCanvasResize' => { },
                  'zShadowPlug.direction' => { },
                  'zShadowPlug.zshadowEnable' => { },
                  'zShadowPlug.dummy' => { },
                  'zShadowPlug.size' => { },
                  'zShadowPlug.scale' => { },
                  'zShadowPlug.edge' => { },
                  'zShadowPlug.sizeBg' => { },
                  'zShadowPlug.color' => { },
                  'zShadowPlug.colorBg' => { },
                  'zShadowPlug.relativeTo' => { },
                  'zShadowPlug.xPos' => { },
                  'zShadowPlug.yPos' => { },
                  'zSoftenPlug.softenEnable' => { },
                  'zSoftenPlug.softenradius' => { },
                  'zSoftenPlug.softenorton' => { },
                  'zSoftenPlug.softencombo' => { },
                  'zSoftenPlug.softenVignette' => { },
                  'zSoftenPlug.softenProof' => { },
                  'zSoftenPlug.softenvigSize' => { },
                  'zSoftenPlug.softenvigShape' => { },
                  'zSoftenPlug.softenvigFeather' => { },
                  'zSoftenPlug.softenvigXpos' => { },
                  'zSoftenPlug.softenvigYpos' => { },
                  'zSoftenPlug.softenvigRotate' => { },
                  'zTextPlug.zTextOn' => { },
                  'zTextPlug.italic' => { },
                  'zTextPlug.bold' => { },
                  'zTextPlug.underline' => { },
                  'zTextPlug.strikeout' => { },
                  'zTextPlug.overline' => { },
                  'zTextPlug.size' => { },
                  'zTextPlug.xpos' => { },
                  'zTextPlug.ypos' => { },
                  'zTextPlug.rotate' => { },
                  'zTextPlug.font' => { },
                  'zTextPlug.text' => { },
                  'zTextPlug.opacity' => { },
                  'zTextPlug.stretch' => { },
                  'zTextPlug.color' => { },
                  'zTextPlug.shearv' => { },
                  'zTextPlug.shearh' => { },
                  'zTextPlug.scalev' => { },
                  'zTextPlug.scaleh' => { },
                  'zTextPlug.projectv' => { },
                  'zTextPlug.projecth' => { },
                  'zTextPlug.basesize' => { },
                  'zTextPlug.textalign' => { },
                  'zTextPlug.textposh' => { },
                  'zTextPlug.textposv' => { },
                  'zTextPlug.shadowEnable' => { },
                  'zTextPlug.shadowDirection' => { },
                  'zTextPlug.shadowShift' => { },
                  'zTextPlug.shadowIntensity' => { },
                  'zTextPlug.shadowColor' => { },
                  'blplug.bbwenabled' => { },
                  'blplug.bbwspotA' => { },
                  'blplug.bbwspotB' => { },
                  'blplug.bbwhueA' => { },
                  'blplug.bbwfuzzyA' => { },
                  'blplug.bbwcolorA' => { },
                  'blplug.bbwhueB' => { },
                  'blplug.bbwcolorB' => { },
                  'blplug.bbwfuzzyB' => { },
                  'blplug.bbwmode' => { },
                  'Equalizer_kb.kbs_enabled' => { },
                  'Equalizer_kb.kbs_bw' => { },
                  'Equalizer_kb.kbs_redlum' => { },
                  'Equalizer_kb.kbs_yellowlum' => { },
                  'Equalizer_kb.kbs_orangelum' => { },
                  'Equalizer_kb.kbs_greenlum' => { },
                  'Equalizer_kb.kbs_cyanlum' => { },
                  'Equalizer_kb.kbs_bluelum' => { },
                  'Equalizer_kb.kbs_magentalum' => { },
                  'Equalizer_kb.kbs_redhue' => { },
                  'Equalizer_kb.kbs_yellowhue' => { },
                  'Equalizer_kb.kbs_orangehue' => { },
                  'Equalizer_kb.kbs_greenhue' => { },
                  'Equalizer_kb.kbs_cyanhue' => { },
                  'Equalizer_kb.kbs_bluehue' => { },
                  'Equalizer_kb.kbs_magentahue' => { },
                  'Equalizer_kb.kbs_redsat' => { },
                  'Equalizer_kb.kbs_yellowsat' => { },
                  'Equalizer_kb.kbs_orangesat' => { },
                  'Equalizer_kb.kbs_greensat' => { },
                  'Equalizer_kb.kbs_cyansat' => { },
                  'Equalizer_kb.kbs_bluesat' => { },
                  'Equalizer_kb.kbs_magentasat' => { },
                  'Equalizer_kb.kbs_redvib' => { },
                  'Equalizer_kb.kbs_yellowvib' => { },
                  'Equalizer_kb.kbs_orangevib' => { },
                  'Equalizer_kb.kbs_greenvib' => { },
                  'Equalizer_kb.kbs_cyanvib' => { },
                  'Equalizer_kb.kbs_bluevib' => { },
                  'Equalizer_kb.kbs_magentavib' => { },
                },
              },
            },
          },
        },
      },
    },
  },
);

1;  #end
